import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import LoadingSpinner from "~/components/LoadingSpinner";
import { type RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="profile_picture"
        className="h-12 w-12 rounded-full"
        height={56}
        width={56}
      />
      <input
        type="text"
        placeholder="what's in your mind?"
        className="w-full rounded-md bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex gap-4 border-b border-slate-400 p-6">
      <Image
        src={author.profileImageUrl}
        alt="profile_picture"
        className="h-12 w-12 rounded-full"
        height={56}
        width={56}
      />
      <span className="flex flex-col gap-3">
        <span className="flex items-center gap-2">
          <p className="text-slate-400">{author.fullName}</p>Â·
          <span className="text-sm text-slate-400">{`${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </span>
        <article key={post.id}>{post.content}</article>
      </span>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();
  const user = useUser();

  console.log(user);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center border-slate-400">
        <section className="w-full border-x md:max-w-2xl">
          <header className="w-full border-b border-slate-400 p-6">
            <nav>
              <div>{!user.isSignedIn && <SignInButton />}</div>
              <div>{!!user.isSignedIn && <CreatePostWizard />}</div>
            </nav>
          </header>
          <section className="flex flex-col">
            {!!isLoading && (
              <div className="flex h-screen items-center justify-center">
                <LoadingSpinner />
              </div>
            )}
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost?.post.id} />
            ))}
          </section>
        </section>
      </main>
    </>
  );
};

export default Home;
